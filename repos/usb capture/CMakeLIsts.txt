cmake_minimum_required(VERSION 3.20)

include(usb_cap/usb_cap.cmake)

add_executable(usb_capture EXCLUDE_FROM_ALL
    logger.hpp
    utils.h
    utils.cpp
    win_service.h
    win_service.cpp
    sample_bus.h
    sample_bus.cpp
    thread_controller.hpp
    usb_cap.h
    usb_cap.cpp
    websocket_server.h
    websocket_server.cpp
    app.h
    app.cpp
    main.cpp)

find_package(Boost 1.70.0 REQUIRED)

set_target_properties(usb_capture PROPERTIES LINK_FLAGS
    "/MANIFESTUAC:\"level='requireAdministrator' uiAccess='false'\"")

target_compile_definitions(usb_capture PRIVATE
    _SILENCE_ALL_CXX17_DEPRECATION_WARNINGS
    _CRT_SECURE_NO_WARNINGS
    _WIN32_WINNT=0x0601)

target_compile_features(usb_capture PRIVATE cxx_std_17)

target_link_libraries(usb_capture PRIVATE
    spdlog::spdlog_header_only
    Boost::headers
    Boost::disable_autolinking
    cinatra::cinatra
    prettyprint::prettyprint
    argagg::argagg
    usb_cap::usb_cap)

add_custom_command(TARGET usb_capture POST_BUILD COMMAND ${CMAKE_COMMAND}
    ARGS -E copy $<TARGET_RUNTIME_DLLS:usb_capture> $<TARGET_FILE_DIR:usb_capture>
    COMMENT "copy dlls to workdir to run"
    COMMAND_EXPAND_LISTS)

install(TARGETS usb_capture
    CONFIGURATIONS Debug Release
    RUNTIME DESTINATION bin
    ARCHIVE DESTINATION bin)
